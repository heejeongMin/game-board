name: Game Board CICD
run-name: ${{ github.actor }} / ${{ github.head_ref }} - ${{ github.event.head_commit.message }} ðŸš€
on: [push]
jobs:
  build:
    name: build application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
#      - name: Validate Gradle wrapper
#        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3
#      - name: Build with Gradle
#        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
#        with:
#          arguments: build
      - name: Run build with Gradle Wrapper
        run: ./gradlew build
      - uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/build/libs

  publish:
    name: Build docker Image and push
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name : Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact

      - name: Display structure of downloaded files
        run: ls -R

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: game-board
          IMAGE_TAG: SNAPSHOT
        run: |
          docker build -t game-board:0.1 .
          docker tag game-board:0.1 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy pod to cluster
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ap-northeast-2 --name pancho

      - name: Deploy
        run: kubectl apply -f kubernetes/deployment.yaml